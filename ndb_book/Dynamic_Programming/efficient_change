# P.226 효율적인 화폐 구성

n, m = map(int, input().split())
array = []
for i in range(n):
  array.append(int(input()))

d = [10001] * (m + 1)         # 0으로 초기화 하지 않고 10001(범위밖의 수)로 초기화 하는 이유는 아래의 if문에서 d[j] = min(d[j], d[j-k]) 로 비교하기 때문에 0으로 초기화할시 min이 아닌 max로 써야하는데 그럼 문제와 맞지 않는다. (최소의 동전수를 구하는 문제임)

d[0] = 0
for i in range(n):      # 모든 동전의 수 범위에서
  for j in range(array[i], m + 1):      # array[i] ~ m까지 (array[i]보다 작은수는 어쳐피 만들수 없으므로 그 이상만 본다.)
    if d[j - array[i]] != 10001:        # 10001로 초기화한 수가 아니면 == 구할 수 있는 수 ( ex) 동전 2가 있을때 d[4] 는 d[2]가 1로 구해져있으므로 d[4 -2] != 10001이라 d[4]도 구할 수 있다. )
      d[j] = min(d[j], d[j - array[i]] + 1)   # 점화식 실행

if d[m] == 10001:
  print(-1)
else:
  print(d[m])
