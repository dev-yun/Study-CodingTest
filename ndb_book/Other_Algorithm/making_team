# P.298 팀 결성

def find_parent(parent, x):     # 같은 집합의 루트노드를 같게 만듬 (= 같은 집합인지 확인가능)
  if parent[x] != x:
    return find_parent(parent, parent[x])
  return parent[x]

def union_parent(parent, a, b):  # a와 b를 합쳐서 둘중 작은 수를 부모노드로 만듬
  a = find_parent(parent, a)
  b = find_parent(parent, b)
  if a < b:
    parent[b] = a
  else:
    parent[a] = b


n, m = map(int, input().split())
parent = [0] * (n + 1)

for i in range(n+1):      # 기본 부모노드 리스트를 자기 자신으로 초기화
  parent[i] = i

for i in range(m):
  x, a, b = map(int, input().split())
  if x == 0:
    union_parent(parent, a, b)
  elif x == 1:
    if find_parent(parent, a) == find_parent(parent, b):  # a와 b의 루트노드가 같다면 (= 같은 집합이라면)
      print('Yes')
    else: print('NO')
