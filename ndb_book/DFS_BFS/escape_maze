from collections import deque

n,m = map(int, input().split())
data = []
for i in range(n):
  data.append(list(map(int,input())))     #공백 없이 n번 리스트를 append해서 행렬 생성

dx = [-1, 1, 0, 0]        # 상하좌우
dy = [0, 0, -1, 1]

def bfs(x,y):
  queue = deque()
  queue.append((x,y))  # 큐에 x,y값 append로 삽입 (선입선출방법)

  while queue: # 큐가 빌때까지 반복
    x,y = queue.popleft()
    for i in range(4):    # 현재 위치에서 4방향위치 확인 (0:상, 1:하, 2:좌, 3:우)
      nx = x + dx[i]
      ny = y + dy[i]
      if nx < 0 or nx >= n or ny < 0 or ny >= m: # 4방향으로 이동했는데 만약 범위 밖이면 무시
        continue
      if data[nx][ny] == 0: # 괴물이 있는경우 무시
        continue
      if data[nx][ny] == 1: # 괴물이 없는경우 
        data[nx][ny] = data[x][y] + 1 # 지나간 길을 1씩 더하며 최단거리 기록
        queue.append((nx, ny))
  return data[n - 1][m - 1]

print(bfs(0,0))
